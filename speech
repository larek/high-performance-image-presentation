Речь

Slide 1
Здравствуйте, меня зовут Александр Тихонов. Я расскажу про высокопроизводительные картинки. Поговорим о кодировании, о декодировании, конвертировании и о работе браузера с картинками. Что мы можем написать на JS для работы с нашими картинками.

Slide 2
Не для кого не секрет, что картинки создают большой траффик и являются самым большим и долгим загружаемым ресурсом на сайте. Есть такой сайт http://httparchive.org/, который спонсируется довольно известными компаниями Google, Mazilla, O'Rielly Media. Сайт сохраняет информацию о загружаемых ресурсах, картиночках, js скриптах и хранит историю. Это большая база для анализа трендов изменения размеров страниц, количества запросов и технологий.

Проблема в том, что картинки и так занимают много места и создают большой траффик, так они еще и увеличиваются по размеру и вес страницы становится гораздо больше из года в год

Изображения - один из лучших способов общения. Поэтому понятно, что вы можете чувствовать себя обманутым, когда вы берете книгу, наполненную словами, обсуждающими образы. Будьте уверены, вас не подведут. Изображения повсюду в Интернете - от пользовательского контента до рекламы продукта до журналистики для обеспечения безопасности. Создание, дизайн, компоновка, обработка и доставка изображений больше не являются эксклюзивным доменом творческих коллективов. Изображения в Интернете - это забота каждого.

Независимо от вашей роли, если вы несете ответственность за любую часть жизненного цикла изображений, эта книга будет полезна для вас.

У меня есть коллега, который работает фронденд-разработчиком и очень старается сделать фронтенд более производительным. И я всегда говорю, что смысл делать бандл меньшего размера, конкотенировать и минифицировать свой бандл, чтобы сделать его меньше на 100кб, если просто одна лишняя картинка может добавиться на странице и общий размер загружаемых ресурсов увеличтся на эти 100kb, а если еще картинки не обладают высокой производительностью, то приложение будет медленным.

Надо рассказать, что картинки больше вего по объему, грузятся дольше всех и создают большой траффик.

Далее надо перечилсть основные форматы изображений и сказать вкратце для чего какой нужен и остановиться на JPEG, потому что он самый популярный

Рассказать про JPEG, какие бывают jpeg и как они кодируют в YCbCr, про метаданые и про цветовую субдискретизацию, про baseline и progressive jpeg, показать практический пример, где мы разрезаем две картинки и прогрессивная картинка при 15% загрузки уже прорисовалась, но в плохом качестве. Рассказать про конвертеры imagemagick, gm, mozjpeg, quetzli, (imagemin?) показать identify -verbose и как мы можем проверить у нас правильная картинка или неправильная.

Рассказать про декодирование изображения в браузере. Показать в dev tools, рассказать, что изображение с 4:2:0 декодируется быстрее.

Как можно загружать картинки 
<img />
<picture />
<link rel='preloader' />

Рассказать про img.decode() показать пример с анимацией в браузере canary

Как лучше орагизовтаь lazyload c IntersectionObserve


libjpeg ? jpegtran ? jpegrescan?

про YCbCr прикольно вот тут https://cloudinary.com/blog/progressive_jpegs_and_green_martians
JPEG first converts RGB pixels to YCbCr pixels. Instead of having Red, Green and Blue channels, JPEG uses a luma (Y) channel and two chroma channels (Cb and Cr). Those channels are treated separately, because the human eye is more sensitive to distortion in luma (brightness) than it is to distortion in chroma (color). The chroma channels are optionally downsampled to half the original resolution; this is called chroma subsampling.

как установил mozjpeg 
поставил brew install jpeg-turbo ? не факт, что обязательно для mozjpeg, mozjpeg не ставится пока (https://github.com/imagemin/imagemin/issues/168)
короче, чтобы написать свой scan script надо че-то про jpegrescan или mozjpeg почитать
